git remote origin [https] //use to first time to connect to remote repository
git remote add test [ssh] //add new repository

git remote set-url origin [https] //connect local to gitHub, may use when computer restart
git remote rm test //remove a repository

git push -u origin master //use to first time push

git push origin master //push updates to gitHub

git clone [https] // clone a reposity to local

/*****************************
using branch command
*****************************/
git branch [branch name] //create a new branch

git branch //check branch name

git checkout brh //change to brh branch

git checkout -b brh //this command combine the branch creation and switch

git branch -d brh //delete a branch

git push origin brh //push branch to gitHub

git merge brh//merge branch and master

git push origin --delete brh //delete remote branchgit 
git push origin: [empty branch]

git branch -m brh lxh //change branch name

git branch -a //check all remote and local branches

git branch -r //check remote branches

git branch -l //ckeck local branches

git branch -D brh //force to delete a branch

git log --graph --pretty=oneline //check merger history

/*****************************
Fast forward is common way to merge two branches (no commit id)
But, there is other merging way: add --no-ff
this will generate a new commit id 
below are procedure:
*****************************/
git checkout -b brh
git commit -a -m ""
git checkout master
git merge --no-f -m "comment" [branch name]

/***************************
using when you have new task
****************************/
git stash //temp store branch nothing to commit when you use git status 
          //then return the master branch to finish new job
git stash list  //check temp store branches
//one way
git stash apply
git stash drop
//second way:
git stash pop

//patch git the code diff to develops,you have to test patch file status when you apply creating patch command
git diff //create a patch
git diff master > filename //create a patch
git apply patch_filename
git commit -a -m "" //submit patch

git format-patch -M master //-M: indicate branch, create a patch
git am [patch_file name] //apply patch
git merge origin [remote branches name] //copy remote branch into local, remember create the branch at local first

//obtain updates from remote
git fetch//get branch updates without merge
git pull//get branch updates with merging
git branch --set-upstream-to=origin/<branch> brh //link to remote branchw

git tag v1.0 //add tag to branch
git tag //check tag
git show [tag name] //show tag info
git tag -a v0.6 -m "comment" [commit id] //set comment for a tag

//.gitignore use to ignore unwanted file

//git config --global alias.ss status//set status to ssw